name: Main
on:
  push:
    branches: [main, v1]
  pull_request:
    branches: [main, v1]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  lint:
    timeout-minutes: 8
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache-dependency-path: 'yarn.lock'
          cache: 'yarn'
      - name: Install root dependencies
        run: yarn install
      - name: Build dependencies
        run: make ci-build
      - name: Install core libs
        run: sudo apt-get install --yes curl bc
      - name: Run lint + type check
        run: make ci-lint
  unit:
    timeout-minutes: 8
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache-dependency-path: 'yarn.lock'
          cache: 'yarn'
      - name: Install root dependencies
        run: yarn install
      - name: Build dependencies
        run: make ci-build
      - name: Run unit tests
        run: make ci-unit
  integration:
    timeout-minutes: 8
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache-dependency-path: 'yarn.lock'
          cache: 'yarn'
      - name: Install root dependencies
        run: yarn install
      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v2
      - name: Spin up docker services
        run: |
          docker buildx create --use --driver=docker-container
          docker buildx bake -f ./docker-compose.ci.yml --set *.cache-to="type=gha" --set *.cache-from="type=gha" --load
      - name: Build dependencies
        run: make ci-build
      - name: Run integration tests
        run: make ci-int
  otel-smoke-test:
    timeout-minutes: 8
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get changed OTEL collector files
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files: |
            docker/otel-collector/**
            smoke-tests/otel-ccollector/**
      - name: Install required tooling
        if: steps.changed-files.outputs.any_changed == 'true'
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get install -y apt-transport-https ca-certificates curl gnupg
          curl -fsSL 'https://packages.clickhouse.com/rpm/lts/repodata/repomd.xml.key' | sudo gpg --dearmor -o /usr/share/keyrings/clickhouse-keyring.gpg
          ARCH=$(dpkg --print-architecture)
          echo "deb [signed-by=/usr/share/keyrings/clickhouse-keyring.gpg arch=${ARCH}] https://packages.clickhouse.com/deb stable main" | sudo tee /etc/apt/sources.list.d/clickhouse.list
          sudo apt-get update
          sudo apt-get install --yes curl bats clickhouse-client
      - name: Run Smoke Tests
        if: steps.changed-files.outputs.any_changed == 'true'
        working-directory: ./smoke-tests/otel-collector
        run: bats .
  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    container:
      image: mcr.microsoft.com/playwright:v1.55.0-jammy
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache-dependency-path: 'yarn.lock'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Build dependencies
        run: npx nx run-many -t ci:build

      - name: Run Playwright tests
        run: |
          cd packages/app
          yarn test:e2e

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: packages/app/playwright-report/
          retention-days: 30

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: packages/app/test-results/
          retention-days: 30

      - name: Comment PR with test results
        uses: actions/github-script@v7
        if: always() && github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            try {
              const resultsPath = path.join('packages/app/test-results/results.json');
              if (fs.existsSync(resultsPath)) {
                const results = JSON.parse(fs.readFileSync(resultsPath, 'utf8'));
                const { stats } = results;

                const total = stats.expected + stats.unexpected + stats.flaky + stats.skipped;
                const failed = stats.unexpected > 0;

                const summary = failed
                  ? `❌ **${stats.unexpected} test${stats.unexpected > 1 ? 's' : ''} failed**`
                  : `✅ **All tests passed**`;

                const body = `## E2E Test Results
                
                ${summary} • ${stats.expected} passed • ${stats.skipped} skipped • ${Math.round(stats.duration / 1000)}s
                
                <details>
                <summary>View Details</summary>

                | Status | Count |
                |--------|-------|
                | ✅ Passed | ${stats.expected} |
                | ❌ Failed | ${stats.unexpected} |
                | ⚠️ Flaky | ${stats.flaky} |
                | ⏭️ Skipped | ${stats.skipped} |

                </details>

                [View full report →](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
              }
            } catch (error) {
              console.log('Could not post test results:', error.message);
            }
