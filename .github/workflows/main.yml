name: Main
on:
  push:
    branches: [main, v1]
  pull_request:
    branches: [main, v1]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  lint:
    timeout-minutes: 8
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache-dependency-path: 'yarn.lock'
          cache: 'yarn'
      - name: Install root dependencies
        run: yarn install
      - name: Build dependencies
        run: make ci-build
      - name: Install core libs
        run: sudo apt-get install --yes curl bc
      - name: Run lint + type check
        run: make ci-lint
  unit:
    timeout-minutes: 8
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache-dependency-path: 'yarn.lock'
          cache: 'yarn'
      - name: Install root dependencies
        run: yarn install
      - name: Build dependencies
        run: make ci-build
      - name: Run unit tests
        run: make ci-unit
  integration:
    timeout-minutes: 8
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache-dependency-path: 'yarn.lock'
          cache: 'yarn'
      - name: Install root dependencies
        run: yarn install
      - name: Expose GitHub Runtime
        uses: crazy-max/ghaction-github-runtime@v2
      - name: Spin up docker services
        run: |
          docker buildx create --use --driver=docker-container
          docker buildx bake -f ./docker-compose.ci.yml --set *.cache-to="type=gha" --set *.cache-from="type=gha" --load
      - name: Build dependencies
        run: make ci-build
      - name: Run integration tests
        run: make ci-int
  otel-smoke-test:
    timeout-minutes: 8
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get changed OTEL collector files
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files: |
            docker/otel-collector/**
            smoke-tests/otel-ccollector/**
      - name: Install required tooling
        if: steps.changed-files.outputs.any_changed == 'true'
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt-get install -y apt-transport-https ca-certificates curl gnupg
          curl -fsSL 'https://packages.clickhouse.com/rpm/lts/repodata/repomd.xml.key' | sudo gpg --dearmor -o /usr/share/keyrings/clickhouse-keyring.gpg
          ARCH=$(dpkg --print-architecture)
          echo "deb [signed-by=/usr/share/keyrings/clickhouse-keyring.gpg arch=${ARCH}] https://packages.clickhouse.com/deb stable main" | sudo tee /etc/apt/sources.list.d/clickhouse.list
          sudo apt-get update
          sudo apt-get install --yes curl bats clickhouse-client
      - name: Run Smoke Tests
        if: steps.changed-files.outputs.any_changed == 'true'
        working-directory: ./smoke-tests/otel-collector
        run: bats .
  app-smoke-test:
    name: HyperDX App Smoke Test
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4
      - name: Waiting for vercel preview to be ready
        uses: patrickedqvist/wait-for-vercel-preview@v1.3.2
        id: waitFor200
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          max_timeout: 1200
          check_interval: 10
      - run: echo ${{steps.waitFor200.outputs.url}}

      - name: Stably Runner Action
        uses: stablyhq/stably-runner-action@v3
        with:
          test-suite-id: cmc548u5u0001la04q7y8ddj2
          github-token: ${{ secrets.GITHUB_TOKEN }}
          api-key: ${{ secrets.STABLY_API_KEY }}
          environment: PRODUCTION
          variable-overrides: |
            {
              "SITE_URL": "${{ steps.waitFor200.outputs.url }}"
            }
