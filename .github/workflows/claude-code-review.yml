name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize]
    # Optional: Only run on specific file changes
    # paths:
    #   - "src/**/*.ts"
    #   - "src/**/*.tsx"
    #   - "src/**/*.js"
    #   - "src/**/*.jsx"

jobs:
  claude-review:
    # Optional: Filter by PR author
    # if: |
    #   github.event.pull_request.user.login == 'external-contributor' ||
    #   github.event.pull_request.user.login == 'new-developer' ||
    #   github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR'

    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@v1
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          prompt: |
            REPO: ${{ github.repository }}
            PR NUMBER: ${{ github.event.pull_request.number }}

            Please review this pull request. Use the repository's CLAUDE.md for guidance on style and conventions.

            **IMPORTANT: Keep your review SHORT and ACTIONABLE.**

            Format your review as a concise bulleted list focusing ONLY on:
            - Critical bugs or security issues (if any)
            - Important code quality issues or violations of project patterns
            - Must-fix items before merge

            Skip minor style nitpicks, explanations of obvious issues, and lengthy justifications unless critical.
            Each item should be: **Issue** ‚Üí **Fix** (one line each when possible).

            Example format:
            - ‚ùå Unvalidated user input in API endpoint ‚Üí Add input validation
            - ‚ö†Ô∏è Missing error handling in async function ‚Üí Wrap in try-catch
            - üîí Hardcoded credentials in config.ts ‚Üí Move to environment variables

            If there are NO critical issues, simply say "‚úÖ No critical issues found."

            Note: If the team wants a more thorough review, they can comment on the PR requesting one.

            Use `gh pr comment --edit-last --create-if-none` with your Bash tool to leave your review as a comment on the PR.
            This will create a new comment if none exists, or edit the last comment if one exists.

          # See https://github.com/anthropics/claude-code-action/blob/main/docs/usage.md
          # or https://docs.claude.com/en/docs/claude-code/sdk#command-line for available options
          claude_args:
            '--allowed-tools "Bash(gh issue view:*),Bash(gh search:*),Bash(gh
            issue list:*),Bash(gh pr comment:*),Bash(gh pr diff:*),Bash(gh pr
            view:*),Bash(gh pr list:*)"'
