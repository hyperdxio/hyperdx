name: Release Nightly
on:
  push:
    branches: [v2]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
permissions:
  contents: write
  packages: write
  pull-requests: write
  actions: read
jobs:
  release:
    name: Release
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: true
      matrix:
        release:
          - release-all-in-one-nightly
          - release-app-nightly
          - release-local-nightly
          - release-otel-collector-nightly
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Load Environment Variables from .env
        uses: xom9ikk/dotenv@v2
      - name: Publish Images
        run: make ${{ matrix.release }}

  slack-notify-failure:
    needs: release
    runs-on: ubuntu-24.04
    if: failure() && always()
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get failed jobs
        id: get_failed_jobs
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const response = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            });

            const failedJobs = response.data.jobs
              .filter(job => job.status === 'completed' && job.conclusion === 'failure')
              .map(job => job.name)
              .join(', ');

            core.setOutput('failed_jobs', failedJobs);

      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: repo,workflow,commit,author
          custom_payload: |
            {
              "text": "Release Nightly Failed ðŸ˜”",
              "attachments": [{
                "color": "danger",
                "fields": [
                  {
                    "title": "Failed Build",
                    "value": "${{ steps.get_failed_jobs.outputs.failed_jobs }}",
                    "short": false
                  },
                  {
                    "title": "Commit",
                    "value": "<https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>",
                    "short": false
                  },
                  {
                    "title": "Author",
                    "value": "${{ github.actor }}",
                    "short": true
                  }
                ]
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_ENG_NOTIFS }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # notify_downstream:
  #   name: Notify Downstream
  #   needs: [publish_common_utils, release]
  #   runs-on: ubuntu-24.04
  #   if:
  #     needs.publish_common_utils.outputs.changeset_outputs_hasChangesets ==
  #     'false'
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Load Environment Variables from .env
  #       uses: xom9ikk/dotenv@v2
  #     - name: Get Downstream App Installation Token
  #       id: auth
  #       uses: actions/create-github-app-token@v2
  #       with:
  #         app-id: ${{ secrets.DOWNSTREAM_CH_APP_ID }}
  #         private-key: ${{ secrets.DOWNSTREAM_CH_APP_PRIVATE_KEY }}
  #         owner: ${{ secrets.DOWNSTREAM_CH_OWNER }}
  #     - name: Notify Downstream
  #       uses: actions/github-script@v7
  #       env:
  #         TAG: ${{ env.IMAGE_VERSION }}${{ env.IMAGE_VERSION_SUB_TAG }}
  #       with:
  #         github-token: ${{ steps.auth.outputs.token }}
  #         script: |
  #           const { TAG } = process.env;
  #           const result = await github.rest.actions.createWorkflowDispatch({
  #             owner: '${{ secrets.DOWNSTREAM_CH_OWNER }}',
  #             repo: '${{ secrets.DOWNSTREAM_DP_REPO }}',
  #             workflow_id: '${{ secrets.DOWNSTREAM_DP_WORKFLOW_ID }}',
  #             ref: 'main',
  #             inputs: {
  #               tag: TAG
  #             }
  #           });
